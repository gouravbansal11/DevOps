<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.vamman.ms</groupId>
    <artifactId>codeGenrator</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>OpenApiCodeGenrator</name>
    <properties>
        <java.version>1.8</java.version>
        <msName>userManagement</msName>
        <msModuleName>usermanagement</msModuleName>
        <!-- Location of the OpenAPI YAML file. -->
        <openapi.basedir>${project.basedir}/../${msModuleName}-api</openapi.basedir>
        <openapi.v1.yaml>${project.basedir}/src/main/resources/v1/UserManagement.yaml</openapi.v1.yaml>
        <!-- Base Java package for OpenAPI generated source code. -->
        <openapi.v1.package>com.vaaman.ms.${msName}.v1</openapi.v1.package>
        <openapi-generator.version>5.1.1</openapi-generator.version>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi-generator.version}</version>
                <executions>
                    <execution>
                        <id>generate-openapi-client-v1</id>
                        <!-- Do this in generate-resources instead of generate-sources,
                             so template customization steps happen first. -->
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>

                        <configuration>
                            <generatorName>spring</generatorName>
                            <inputSpec>${openapi.v1.yaml}</inputSpec>
                            <modelPackage>${openapi.v1.package}.model</modelPackage>
                            <apiPackage>${openapi.v1.package}.service</apiPackage>
                            <invokerPackage>${openapi.v1.package}</invokerPackage>
                            <output>${openapi.basedir}</output>
                            <groupId>${groupId}</groupId>
                            <artifactId>${msName}Api</artifactId>
                            <artifactDescription>User Management API's</artifactDescription>
                            <artifactVersion>${version}</artifactVersion>
                            <dateLibrary>java8</dateLibrary>
                            <java8>true</java8>
                            <interfaceonly>true</interfaceonly>
                         <!--   <library>spring-mvc</library>-->

                            <!-- Configuration not working here but inside the configOption
                                <delegatePattern>true</delegatePattern>
                                <configPackage>${openapi.v1.package}.configuration</configPackage>
                             -->
                            <configOptions>
                                <configPackage>${openapi.v1.package}.configuration</configPackage>
                                <delegatePattern>true</delegatePattern>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <proc>none</proc>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
